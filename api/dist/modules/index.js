"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _jwtToken = require("../middleware/jwtToken");

var _validateAdmin = require("../middleware/validateAdmin");

var _route = _interopRequireDefault(require("./admin/vehicle/route"));

var _route2 = _interopRequireDefault(require("./admin/user/route"));

var _route3 = _interopRequireDefault(require("./admin/permission/route"));

var _route4 = _interopRequireDefault(require("./admin/trip/route"));

var _route5 = _interopRequireDefault(require("./admin/driver/route"));

var _route6 = _interopRequireDefault(require("./admin/common/route"));

var _route7 = _interopRequireDefault(require("./admin/customer/route"));

var _route8 = _interopRequireDefault(require("./admin/onlyAdmin/route"));

var _route9 = _interopRequireDefault(require("./admin/ride/route"));

var _route10 = _interopRequireDefault(require("./admin/fare/route"));

var _route11 = _interopRequireDefault(require("./admin/email/route"));

var _route12 = _interopRequireDefault(require("./admin/notification/route"));

var _route13 = _interopRequireDefault(require("./customers/user/route"));

var _route14 = _interopRequireDefault(require("./driver/user/route"));

var _route15 = _interopRequireDefault(require("./admin/sdt/route"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const api = app => {
  app.use('*', (req, res, next) => {
    res.set({
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, PUT, PATCH, DELETE, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization'
    });

    if (req.method === 'OPTIONS') {
      res.status(200).json({
        status: 'Okay'
      });
    } else {
      next();
    }
  });
  app.all('/status', (req, res) => {
    res.send({
      data: {
        headers: req.headers,
        params: req.params,
        query: req.query,
        body: req.body
      }
    });
  });
  app.use('/admin/vehicle', _route.default);
  app.use('/admin/user', _route2.default);
  app.use('/admin/permission', _route3.default);
  app.use('/admin/trip', _route4.default);
  app.use('/admin/driver', _jwtToken.jwtTokenPermission, _route5.default);
  app.use('/admin/common', _route6.default);
  app.use('/admin/customer', _route7.default);
  app.use('/admin/sdt', _route15.default);
  app.use('/admin/adm', _jwtToken.jwtTokenPermission, _validateAdmin.validateSuperAdmin, _route8.default);
  app.use('/admin/ride', _jwtToken.jwtTokenPermission, _route9.default);
  app.use('/admin/fare-management', _jwtToken.jwtTokenPermission, _route10.default);
  app.use('/admin/email', _jwtToken.jwtTokenPermission, _route11.default);
  app.use('/admin/notification', _jwtToken.jwtTokenPermission, _route12.default);
  app.use('/customer/user', _route13.default);
  app.use('/driver/user', _route14.default);
};

var _default = api;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2R1bGVzL2luZGV4LmpzIl0sIm5hbWVzIjpbImFwaSIsImFwcCIsInVzZSIsInJlcSIsInJlcyIsIm5leHQiLCJzZXQiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwiYWxsIiwic2VuZCIsImRhdGEiLCJoZWFkZXJzIiwicGFyYW1zIiwicXVlcnkiLCJib2R5Iiwicm91dGVyVmVoaWNsZSIsInJvdXRlclVzZXIiLCJyb3V0ZXJQZXJtaXNzaW9uIiwicm91dGVyVHJpcCIsImp3dFRva2VuUGVybWlzc2lvbiIsInJvdXRlckRyaXZlciIsInJvdXRlckNvbW1vbiIsInJvdXRlckN1c3RvbWVyIiwicm91dGVyU0RUIiwidmFsaWRhdGVTdXBlckFkbWluIiwicm91dGVyT25seUFkbWluIiwicm91dGVyUmlkZSIsInJvdXRlckZhcmVNYW5hZ2VtZW50Iiwicm91dGVyRW1haWwiLCJyb3V0ZXJOb3RpZmljYXRpb24iLCJyb3V0ZXJDVXNlciIsInJvdXRlckRVc2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBR0E7O0FBR0E7O0FBRUE7Ozs7QUFFQSxNQUFNQSxHQUFHLEdBQUlDLEdBQUQsSUFBUztBQUNqQkEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQzdCRCxJQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUTtBQUNKLHFDQUErQixHQUQzQjtBQUVKLHNDQUFnQyx3Q0FGNUI7QUFHSixzQ0FBZ0M7QUFINUIsS0FBUjs7QUFLQSxRQUFJSCxHQUFHLENBQUNJLE1BQUosS0FBZSxTQUFuQixFQUE4QjtBQUMxQkgsTUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRUQsUUFBQUEsTUFBTSxFQUFFO0FBQVYsT0FBckI7QUFDSCxLQUZELE1BRU87QUFDSEgsTUFBQUEsSUFBSTtBQUNQO0FBQ0osR0FYRDtBQWFBSixFQUFBQSxHQUFHLENBQUNTLEdBQUosQ0FBUSxTQUFSLEVBQW1CLENBQUNQLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBRTdCQSxJQUFBQSxHQUFHLENBQUNPLElBQUosQ0FBUztBQUNMQyxNQUFBQSxJQUFJLEVBQUU7QUFDRkMsUUFBQUEsT0FBTyxFQUFFVixHQUFHLENBQUNVLE9BRFg7QUFFRkMsUUFBQUEsTUFBTSxFQUFFWCxHQUFHLENBQUNXLE1BRlY7QUFHRkMsUUFBQUEsS0FBSyxFQUFFWixHQUFHLENBQUNZLEtBSFQ7QUFJRkMsUUFBQUEsSUFBSSxFQUFFYixHQUFHLENBQUNhO0FBSlI7QUFERCxLQUFUO0FBUUgsR0FWRDtBQVlBZixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxnQkFBUixFQUEwQmUsY0FBMUI7QUFDQWhCLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGFBQVIsRUFBdUJnQixlQUF2QjtBQUNBakIsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsbUJBQVIsRUFBNkJpQixlQUE3QjtBQUNBbEIsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUF1QmtCLGVBQXZCO0FBQ0FuQixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxlQUFSLEVBQXlCbUIsNEJBQXpCLEVBQTZDQyxlQUE3QztBQUNBckIsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsZUFBUixFQUF5QnFCLGVBQXpCO0FBQ0F0QixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxpQkFBUixFQUEyQnNCLGVBQTNCO0FBQ0F2QixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxZQUFSLEVBQXNCdUIsZ0JBQXRCO0FBQ0F4QixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxZQUFSLEVBQXNCbUIsNEJBQXRCLEVBQTBDSyxpQ0FBMUMsRUFBOERDLGVBQTlEO0FBQ0ExQixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCbUIsNEJBQXZCLEVBQTJDTyxlQUEzQztBQUNBM0IsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsd0JBQVIsRUFBa0NtQiw0QkFBbEMsRUFBc0RRLGdCQUF0RDtBQUNBNUIsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3Qm1CLDRCQUF4QixFQUE0Q1MsZ0JBQTVDO0FBQ0E3QixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxxQkFBUixFQUErQm1CLDRCQUEvQixFQUFtRFUsZ0JBQW5EO0FBRUE5QixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxnQkFBUixFQUEwQjhCLGdCQUExQjtBQUdBL0IsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QitCLGdCQUF4QjtBQUNILENBNUNEOztlQThDZWpDLEciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBqd3RUb2tlblBlcm1pc3Npb24gfSBmcm9tICcuLi9taWRkbGV3YXJlL2p3dFRva2VuJztcclxuaW1wb3J0IHsgdmFsaWRhdGVTdXBlckFkbWluIH0gZnJvbSAnLi4vbWlkZGxld2FyZS92YWxpZGF0ZUFkbWluJztcclxuaW1wb3J0IHJvdXRlclZlaGljbGUgZnJvbSAnLi9hZG1pbi92ZWhpY2xlL3JvdXRlJztcclxuaW1wb3J0IHJvdXRlclVzZXIgZnJvbSAnLi9hZG1pbi91c2VyL3JvdXRlJztcclxuaW1wb3J0IHJvdXRlclBlcm1pc3Npb24gZnJvbSAnLi9hZG1pbi9wZXJtaXNzaW9uL3JvdXRlJztcclxuaW1wb3J0IHJvdXRlclRyaXAgZnJvbSAnLi9hZG1pbi90cmlwL3JvdXRlJztcclxuaW1wb3J0IHJvdXRlckRyaXZlciBmcm9tICcuL2FkbWluL2RyaXZlci9yb3V0ZSc7XHJcbmltcG9ydCByb3V0ZXJDb21tb24gZnJvbSAnLi9hZG1pbi9jb21tb24vcm91dGUnO1xyXG5pbXBvcnQgcm91dGVyQ3VzdG9tZXIgZnJvbSAnLi9hZG1pbi9jdXN0b21lci9yb3V0ZSc7XHJcbmltcG9ydCByb3V0ZXJPbmx5QWRtaW4gZnJvbSAnLi9hZG1pbi9vbmx5QWRtaW4vcm91dGUnO1xyXG5pbXBvcnQgcm91dGVyUmlkZSBmcm9tICcuL2FkbWluL3JpZGUvcm91dGUnO1xyXG5pbXBvcnQgcm91dGVyRmFyZU1hbmFnZW1lbnQgZnJvbSAnLi9hZG1pbi9mYXJlL3JvdXRlJztcclxuaW1wb3J0IHJvdXRlckVtYWlsIGZyb20gJy4vYWRtaW4vZW1haWwvcm91dGUnO1xyXG5pbXBvcnQgcm91dGVyTm90aWZpY2F0aW9uIGZyb20gJy4vYWRtaW4vbm90aWZpY2F0aW9uL3JvdXRlJztcclxuXHJcblxyXG5pbXBvcnQgcm91dGVyQ1VzZXIgZnJvbSAnLi9jdXN0b21lcnMvdXNlci9yb3V0ZSc7XHJcblxyXG5cclxuaW1wb3J0IHJvdXRlckRVc2VyIGZyb20gJy4vZHJpdmVyL3VzZXIvcm91dGUnO1xyXG5cclxuaW1wb3J0IHJvdXRlclNEVCBmcm9tICcuL2FkbWluL3NkdC9yb3V0ZSc7XHJcblxyXG5jb25zdCBhcGkgPSAoYXBwKSA9PiB7XHJcbiAgICBhcHAudXNlKCcqJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICAgICAgcmVzLnNldCh7XHJcbiAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicsXHJcbiAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJzogJ0dFVCwgUE9TVCwgUFVULCBQQVRDSCwgREVMRVRFLCBPUFRJT05TJyxcclxuICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOiAnQ29udGVudC1UeXBlLCBBdXRob3JpemF0aW9uJyxcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ09QVElPTlMnKSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgc3RhdHVzOiAnT2theScgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbmV4dCgpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGFwcC5hbGwoJy9zdGF0dXMnLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgcmVzLnNlbmQoe1xyXG4gICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXEuaGVhZGVycyxcclxuICAgICAgICAgICAgICAgIHBhcmFtczogcmVxLnBhcmFtcyxcclxuICAgICAgICAgICAgICAgIHF1ZXJ5OiByZXEucXVlcnksXHJcbiAgICAgICAgICAgICAgICBib2R5OiByZXEuYm9keSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIGFwcC51c2UoJy9hZG1pbi92ZWhpY2xlJywgcm91dGVyVmVoaWNsZSk7XHJcbiAgICBhcHAudXNlKCcvYWRtaW4vdXNlcicsIHJvdXRlclVzZXIpO1xyXG4gICAgYXBwLnVzZSgnL2FkbWluL3Blcm1pc3Npb24nLCByb3V0ZXJQZXJtaXNzaW9uKTtcclxuICAgIGFwcC51c2UoJy9hZG1pbi90cmlwJywgcm91dGVyVHJpcCk7XHJcbiAgICBhcHAudXNlKCcvYWRtaW4vZHJpdmVyJywgand0VG9rZW5QZXJtaXNzaW9uLCByb3V0ZXJEcml2ZXIpO1xyXG4gICAgYXBwLnVzZSgnL2FkbWluL2NvbW1vbicsIHJvdXRlckNvbW1vbik7XHJcbiAgICBhcHAudXNlKCcvYWRtaW4vY3VzdG9tZXInLCByb3V0ZXJDdXN0b21lcik7XHJcbiAgICBhcHAudXNlKCcvYWRtaW4vc2R0Jywgcm91dGVyU0RUKTtcclxuICAgIGFwcC51c2UoJy9hZG1pbi9hZG0nLCBqd3RUb2tlblBlcm1pc3Npb24sIHZhbGlkYXRlU3VwZXJBZG1pbiwgcm91dGVyT25seUFkbWluKTtcclxuICAgIGFwcC51c2UoJy9hZG1pbi9yaWRlJywgand0VG9rZW5QZXJtaXNzaW9uLCByb3V0ZXJSaWRlKTtcclxuICAgIGFwcC51c2UoJy9hZG1pbi9mYXJlLW1hbmFnZW1lbnQnLCBqd3RUb2tlblBlcm1pc3Npb24sIHJvdXRlckZhcmVNYW5hZ2VtZW50KTtcclxuICAgIGFwcC51c2UoJy9hZG1pbi9lbWFpbCcsIGp3dFRva2VuUGVybWlzc2lvbiwgcm91dGVyRW1haWwpO1xyXG4gICAgYXBwLnVzZSgnL2FkbWluL25vdGlmaWNhdGlvbicsIGp3dFRva2VuUGVybWlzc2lvbiwgcm91dGVyTm90aWZpY2F0aW9uKTtcclxuXHJcbiAgICBhcHAudXNlKCcvY3VzdG9tZXIvdXNlcicsIHJvdXRlckNVc2VyKTtcclxuXHJcblxyXG4gICAgYXBwLnVzZSgnL2RyaXZlci91c2VyJywgcm91dGVyRFVzZXIpO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBpO1xyXG4iXX0=