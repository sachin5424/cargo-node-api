"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _express = require("express");

var _UserConteroller = _interopRequireDefault(require("./UserConteroller"));

var _CustomerValidations = require("../../../validation/CustomerValidations");

var _userAuthController = require("./userAuthController");

var _userValidations = require("./userValidations");

var _jwt = require("./jwt");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = (0, _express.Router)({
  mergeParams: true
});
router.post("/login", _CustomerValidations.customerLoginValidation, _UserConteroller.default.login);
router.get("/email-verify/:email", _UserConteroller.default.verifyEmail);
router.post("/forget-pasword", _UserConteroller.default.genForgetPasswordUrl);
router.get("/reset-password/:key", _UserConteroller.default.resetPasswordForm);
router.post("/reset-password/:key", _CustomerValidations.customerResetPasswordValidation, _UserConteroller.default.resetPAssword); // router.post('/auth/user-register', userRegisterValidation,validationMiddleware,userRegister);

router.post('/auth/user-register', _userValidations.userRegisterValidation, _userValidations.validationMiddleware, _userAuthController.userRegister);
router.post('/auth/user-otp-verify', _userValidations.otpVerified, _userValidations.validationMiddleware, _userAuthController.userOtpVerification);
router.post('/auth/user-login-phone', _userValidations.userLoginMobileNumberValidation, _userValidations.validationMiddleware, _userAuthController.userLoginWithMobile);
router.post('/auth/user-forget-password', _userValidations.userForgetPasswordValidation, _userValidations.validationMiddleware, _userAuthController.userForgetPassword);
router.post('/auth/user-change-password', _userValidations.chnagePasswordValidation, _userValidations.validationMiddleware, _userAuthController.chnagePassword);
router.post('/profile/update', _jwt.jwtTokenPermission, _userValidations.profileUpdateValidation, _userValidations.validationMiddleware, _userAuthController.profileUpdate);
router.get('/profile/details', _jwt.jwtTokenPermission, _userAuthController.profileDetails); //profileDetails

var _default = router;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2N1c3RvbWVycy91c2VyL3JvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIm1lcmdlUGFyYW1zIiwicG9zdCIsImN1c3RvbWVyTG9naW5WYWxpZGF0aW9uIiwiVXNlckNvbnRyb2xsZXIiLCJsb2dpbiIsImdldCIsInZlcmlmeUVtYWlsIiwiZ2VuRm9yZ2V0UGFzc3dvcmRVcmwiLCJyZXNldFBhc3N3b3JkRm9ybSIsImN1c3RvbWVyUmVzZXRQYXNzd29yZFZhbGlkYXRpb24iLCJyZXNldFBBc3N3b3JkIiwidXNlclJlZ2lzdGVyVmFsaWRhdGlvbiIsInZhbGlkYXRpb25NaWRkbGV3YXJlIiwidXNlclJlZ2lzdGVyIiwib3RwVmVyaWZpZWQiLCJ1c2VyT3RwVmVyaWZpY2F0aW9uIiwidXNlckxvZ2luTW9iaWxlTnVtYmVyVmFsaWRhdGlvbiIsInVzZXJMb2dpbldpdGhNb2JpbGUiLCJ1c2VyRm9yZ2V0UGFzc3dvcmRWYWxpZGF0aW9uIiwidXNlckZvcmdldFBhc3N3b3JkIiwiY2huYWdlUGFzc3dvcmRWYWxpZGF0aW9uIiwiY2huYWdlUGFzc3dvcmQiLCJqd3RUb2tlblBlcm1pc3Npb24iLCJwcm9maWxlVXBkYXRlVmFsaWRhdGlvbiIsInByb2ZpbGVVcGRhdGUiLCJwcm9maWxlRGV0YWlscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQVVBOzs7O0FBREEsTUFBTUEsTUFBTSxHQUFHLHFCQUFPO0FBQUVDLEVBQUFBLFdBQVcsRUFBRTtBQUFmLENBQVAsQ0FBZjtBQUlBRCxNQUFNLENBQUNFLElBQVAsQ0FBWSxRQUFaLEVBQXNCQyw0Q0FBdEIsRUFBK0NDLHlCQUFlQyxLQUE5RDtBQUNBTCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxzQkFBWCxFQUFtQ0YseUJBQWVHLFdBQWxEO0FBQ0FQLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLGlCQUFaLEVBQStCRSx5QkFBZUksb0JBQTlDO0FBQ0FSLE1BQU0sQ0FBQ00sR0FBUCxDQUFXLHNCQUFYLEVBQW1DRix5QkFBZUssaUJBQWxEO0FBQ0FULE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLHNCQUFaLEVBQW9DUSxvREFBcEMsRUFBcUVOLHlCQUFlTyxhQUFwRixFLENBQ0E7O0FBQ0FYLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLHFCQUFaLEVBQW1DVSx1Q0FBbkMsRUFBMERDLHFDQUExRCxFQUErRUMsZ0NBQS9FO0FBQ0FkLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLHVCQUFaLEVBQXFDYSw0QkFBckMsRUFBaURGLHFDQUFqRCxFQUFzRUcsdUNBQXRFO0FBQ0FoQixNQUFNLENBQUNFLElBQVAsQ0FBWSx3QkFBWixFQUFzQ2UsZ0RBQXRDLEVBQXNFSixxQ0FBdEUsRUFBMkZLLHVDQUEzRjtBQUNBbEIsTUFBTSxDQUFDRSxJQUFQLENBQVksNEJBQVosRUFBMENpQiw2Q0FBMUMsRUFBdUVOLHFDQUF2RSxFQUE0Rk8sc0NBQTVGO0FBQ0FwQixNQUFNLENBQUNFLElBQVAsQ0FBWSw0QkFBWixFQUF5Q21CLHlDQUF6QyxFQUFrRVIscUNBQWxFLEVBQXdGUyxrQ0FBeEY7QUFDQXRCLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLGlCQUFaLEVBQThCcUIsdUJBQTlCLEVBQWlEQyx3Q0FBakQsRUFBeUVYLHFDQUF6RSxFQUE4RlksaUNBQTlGO0FBQ0F6QixNQUFNLENBQUNNLEdBQVAsQ0FBVyxrQkFBWCxFQUE4QmlCLHVCQUE5QixFQUFpREcsa0NBQWpELEUsQ0FDQTs7ZUFDZTFCLE0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgVXNlckNvbnRyb2xsZXIgZnJvbSBcIi4vVXNlckNvbnRlcm9sbGVyXCI7XHJcbmltcG9ydCB7IGN1c3RvbWVyUmVzZXRQYXNzd29yZFZhbGlkYXRpb24gfSBmcm9tIFwiLi4vLi4vLi4vdmFsaWRhdGlvbi9DdXN0b21lclZhbGlkYXRpb25zXCI7XHJcbmltcG9ydCB7IGN1c3RvbWVyTG9naW5WYWxpZGF0aW9uIH0gZnJvbSBcIi4uLy4uLy4uL3ZhbGlkYXRpb24vQ3VzdG9tZXJWYWxpZGF0aW9uc1wiO1xyXG5pbXBvcnQge3VzZXJSZWdpc3Rlcix1c2VyT3RwVmVyaWZpY2F0aW9uLHVzZXJMb2dpbldpdGhNb2JpbGUsdXNlckZvcmdldFBhc3N3b3JkLGNobmFnZVBhc3N3b3JkLHByb2ZpbGVVcGRhdGUscHJvZmlsZURldGFpbHN9IGZyb20gJy4vdXNlckF1dGhDb250cm9sbGVyJztcclxuaW1wb3J0IHtcclxuICAgIHZhbGlkYXRpb25NaWRkbGV3YXJlLFxyXG4gICAgdXNlclJlZ2lzdGVyVmFsaWRhdGlvbixcclxuICAgIG90cFZlcmlmaWVkLFxyXG4gICAgdXNlckxvZ2luTW9iaWxlTnVtYmVyVmFsaWRhdGlvbixcclxuICAgIHVzZXJGb3JnZXRQYXNzd29yZFZhbGlkYXRpb24sXHJcbiAgICBjaG5hZ2VQYXNzd29yZFZhbGlkYXRpb24sXHJcbiAgICBwcm9maWxlVXBkYXRlVmFsaWRhdGlvblxyXG59IGZyb20gJy4vdXNlclZhbGlkYXRpb25zJ1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoeyBtZXJnZVBhcmFtczogdHJ1ZSB9KTtcclxuaW1wb3J0IHtqd3RUb2tlblBlcm1pc3Npb259IGZyb20gJy4vand0J1xyXG5cclxuXHJcbnJvdXRlci5wb3N0KFwiL2xvZ2luXCIsIGN1c3RvbWVyTG9naW5WYWxpZGF0aW9uLCBVc2VyQ29udHJvbGxlci5sb2dpbik7XHJcbnJvdXRlci5nZXQoXCIvZW1haWwtdmVyaWZ5LzplbWFpbFwiLCBVc2VyQ29udHJvbGxlci52ZXJpZnlFbWFpbCk7XHJcbnJvdXRlci5wb3N0KFwiL2ZvcmdldC1wYXN3b3JkXCIsIFVzZXJDb250cm9sbGVyLmdlbkZvcmdldFBhc3N3b3JkVXJsKTtcclxucm91dGVyLmdldChcIi9yZXNldC1wYXNzd29yZC86a2V5XCIsIFVzZXJDb250cm9sbGVyLnJlc2V0UGFzc3dvcmRGb3JtKTtcclxucm91dGVyLnBvc3QoXCIvcmVzZXQtcGFzc3dvcmQvOmtleVwiLCBjdXN0b21lclJlc2V0UGFzc3dvcmRWYWxpZGF0aW9uLCBVc2VyQ29udHJvbGxlci5yZXNldFBBc3N3b3JkKTtcclxuLy8gcm91dGVyLnBvc3QoJy9hdXRoL3VzZXItcmVnaXN0ZXInLCB1c2VyUmVnaXN0ZXJWYWxpZGF0aW9uLHZhbGlkYXRpb25NaWRkbGV3YXJlLHVzZXJSZWdpc3Rlcik7XHJcbnJvdXRlci5wb3N0KCcvYXV0aC91c2VyLXJlZ2lzdGVyJywgdXNlclJlZ2lzdGVyVmFsaWRhdGlvbix2YWxpZGF0aW9uTWlkZGxld2FyZSx1c2VyUmVnaXN0ZXIpO1xyXG5yb3V0ZXIucG9zdCgnL2F1dGgvdXNlci1vdHAtdmVyaWZ5Jywgb3RwVmVyaWZpZWQsdmFsaWRhdGlvbk1pZGRsZXdhcmUsdXNlck90cFZlcmlmaWNhdGlvbik7XHJcbnJvdXRlci5wb3N0KCcvYXV0aC91c2VyLWxvZ2luLXBob25lJywgdXNlckxvZ2luTW9iaWxlTnVtYmVyVmFsaWRhdGlvbix2YWxpZGF0aW9uTWlkZGxld2FyZSx1c2VyTG9naW5XaXRoTW9iaWxlKTtcclxucm91dGVyLnBvc3QoJy9hdXRoL3VzZXItZm9yZ2V0LXBhc3N3b3JkJywgdXNlckZvcmdldFBhc3N3b3JkVmFsaWRhdGlvbix2YWxpZGF0aW9uTWlkZGxld2FyZSx1c2VyRm9yZ2V0UGFzc3dvcmQpO1xyXG5yb3V0ZXIucG9zdCgnL2F1dGgvdXNlci1jaGFuZ2UtcGFzc3dvcmQnLGNobmFnZVBhc3N3b3JkVmFsaWRhdGlvbix2YWxpZGF0aW9uTWlkZGxld2FyZSwgY2huYWdlUGFzc3dvcmQpO1xyXG5yb3V0ZXIucG9zdCgnL3Byb2ZpbGUvdXBkYXRlJyxqd3RUb2tlblBlcm1pc3Npb24scHJvZmlsZVVwZGF0ZVZhbGlkYXRpb24sdmFsaWRhdGlvbk1pZGRsZXdhcmUscHJvZmlsZVVwZGF0ZSlcclxucm91dGVyLmdldCgnL3Byb2ZpbGUvZGV0YWlscycsand0VG9rZW5QZXJtaXNzaW9uLHByb2ZpbGVEZXRhaWxzKVxyXG4vL3Byb2ZpbGVEZXRhaWxzXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuIl19