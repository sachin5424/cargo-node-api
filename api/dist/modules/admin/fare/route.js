"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _express = require("express");

var _FareManagementConteroller = _interopRequireDefault(require("./FareManagementConteroller"));

var _validateAdmin = require("../../../middleware/validateAdmin");

var _FareValidations = require("../../../validation/FareValidations");

var _others = require("../../../middleware/others");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = (0, _express.Router)({
  mergeParams: true
});
router.get('/list', checkFareManagementListAccess, _FareManagementConteroller.default.list);
router.get('/list/:isAll', checkFareManagementListAccess, _FareManagementConteroller.default.list);
router.post('/save', checkFareManagementSaveAccess, _FareValidations.fareManagementValidations, _others.formValidation, _FareManagementConteroller.default.save);
router.delete("/delete/:id", checkFareManagementDeleteAccess, _FareManagementConteroller.default.delete);

async function checkFareManagementListAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'viewFareManagement');
}

;

async function checkFareManagementSaveAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, req.body._id ? 'editFareManagement' : 'addFareManagement', true);
}

;

async function checkFareManagementDeleteAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'deleteFareManagement');
}

;
var _default = router;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2FkbWluL2ZhcmUvcm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwibWVyZ2VQYXJhbXMiLCJnZXQiLCJjaGVja0ZhcmVNYW5hZ2VtZW50TGlzdEFjY2VzcyIsIkZhcmVNYW5hZ2VtZW50Q29udGVyb2xsZXIiLCJsaXN0IiwicG9zdCIsImNoZWNrRmFyZU1hbmFnZW1lbnRTYXZlQWNjZXNzIiwiZmFyZU1hbmFnZW1lbnRWYWxpZGF0aW9ucyIsImZvcm1WYWxpZGF0aW9uIiwic2F2ZSIsImRlbGV0ZSIsImNoZWNrRmFyZU1hbmFnZW1lbnREZWxldGVBY2Nlc3MiLCJyZXEiLCJyZXMiLCJuZXh0IiwiYm9keSIsIl9pZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsTUFBTSxHQUFHLHFCQUFPO0FBQUVDLEVBQUFBLFdBQVcsRUFBRTtBQUFmLENBQVAsQ0FBZjtBQUVBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxPQUFYLEVBQW9CQyw2QkFBcEIsRUFBbURDLG1DQUEwQkMsSUFBN0U7QUFDQUwsTUFBTSxDQUFDRSxHQUFQLENBQVcsY0FBWCxFQUEyQkMsNkJBQTNCLEVBQTBEQyxtQ0FBMEJDLElBQXBGO0FBQ0FMLE1BQU0sQ0FBQ00sSUFBUCxDQUFZLE9BQVosRUFBc0JDLDZCQUF0QixFQUFxREMsMENBQXJELEVBQWdGQyxzQkFBaEYsRUFBZ0dMLG1DQUEwQk0sSUFBMUg7QUFDQVYsTUFBTSxDQUFDVyxNQUFQLENBQWMsYUFBZCxFQUE2QkMsK0JBQTdCLEVBQStEUixtQ0FBMEJPLE1BQXpGOztBQUVBLGVBQWVSLDZCQUFmLENBQThDVSxHQUE5QyxFQUFtREMsR0FBbkQsRUFBd0RDLElBQXhELEVBQThEO0FBQUUsMkNBQXFCRixHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLElBQS9CLEVBQXFDLG9CQUFyQztBQUE2RDs7QUFBQTs7QUFDN0gsZUFBZVIsNkJBQWYsQ0FBOENNLEdBQTlDLEVBQW1EQyxHQUFuRCxFQUF3REMsSUFBeEQsRUFBOEQ7QUFBRSwyQ0FBcUJGLEdBQXJCLEVBQTBCQyxHQUExQixFQUErQkMsSUFBL0IsRUFBcUNGLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxHQUFULEdBQWUsb0JBQWYsR0FBc0MsbUJBQTNFLEVBQWdHLElBQWhHO0FBQXdHOztBQUFBOztBQUN4SyxlQUFlTCwrQkFBZixDQUFnREMsR0FBaEQsRUFBcURDLEdBQXJELEVBQTBEQyxJQUExRCxFQUFnRTtBQUFFLDJDQUFxQkYsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQyxzQkFBckM7QUFBK0Q7O0FBQUE7ZUFHbEhmLE0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgRmFyZU1hbmFnZW1lbnRDb250ZXJvbGxlciBmcm9tIFwiLi9GYXJlTWFuYWdlbWVudENvbnRlcm9sbGVyXCI7XHJcbmltcG9ydCB7IGNoZWNrQWRtaW5QZXJtaXNzaW9uIH0gZnJvbSBcIi4uLy4uLy4uL21pZGRsZXdhcmUvdmFsaWRhdGVBZG1pblwiO1xyXG5pbXBvcnQgeyBmYXJlTWFuYWdlbWVudFZhbGlkYXRpb25zIH0gZnJvbSBcIi4uLy4uLy4uL3ZhbGlkYXRpb24vRmFyZVZhbGlkYXRpb25zXCI7XHJcbmltcG9ydCB7IGZvcm1WYWxpZGF0aW9uIH0gZnJvbSBcIi4uLy4uLy4uL21pZGRsZXdhcmUvb3RoZXJzXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoeyBtZXJnZVBhcmFtczogdHJ1ZSB9KTtcclxuXHJcbnJvdXRlci5nZXQoJy9saXN0JywgY2hlY2tGYXJlTWFuYWdlbWVudExpc3RBY2Nlc3MsIEZhcmVNYW5hZ2VtZW50Q29udGVyb2xsZXIubGlzdCk7XHJcbnJvdXRlci5nZXQoJy9saXN0Lzppc0FsbCcsIGNoZWNrRmFyZU1hbmFnZW1lbnRMaXN0QWNjZXNzLCBGYXJlTWFuYWdlbWVudENvbnRlcm9sbGVyLmxpc3QpO1xyXG5yb3V0ZXIucG9zdCgnL3NhdmUnLCAgY2hlY2tGYXJlTWFuYWdlbWVudFNhdmVBY2Nlc3MsIGZhcmVNYW5hZ2VtZW50VmFsaWRhdGlvbnMsIGZvcm1WYWxpZGF0aW9uLCBGYXJlTWFuYWdlbWVudENvbnRlcm9sbGVyLnNhdmUpO1xyXG5yb3V0ZXIuZGVsZXRlKFwiL2RlbGV0ZS86aWRcIiwgY2hlY2tGYXJlTWFuYWdlbWVudERlbGV0ZUFjY2VzcywgIEZhcmVNYW5hZ2VtZW50Q29udGVyb2xsZXIuZGVsZXRlKTtcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGNoZWNrRmFyZU1hbmFnZW1lbnRMaXN0QWNjZXNzIChyZXEsIHJlcywgbmV4dCkgeyBjaGVja0FkbWluUGVybWlzc2lvbihyZXEsIHJlcywgbmV4dCwgJ3ZpZXdGYXJlTWFuYWdlbWVudCcpOyB9O1xyXG5hc3luYyBmdW5jdGlvbiBjaGVja0ZhcmVNYW5hZ2VtZW50U2F2ZUFjY2VzcyAocmVxLCByZXMsIG5leHQpIHsgY2hlY2tBZG1pblBlcm1pc3Npb24ocmVxLCByZXMsIG5leHQsIHJlcS5ib2R5Ll9pZCA/ICdlZGl0RmFyZU1hbmFnZW1lbnQnIDogJ2FkZEZhcmVNYW5hZ2VtZW50JywgdHJ1ZSk7IH07XHJcbmFzeW5jIGZ1bmN0aW9uIGNoZWNrRmFyZU1hbmFnZW1lbnREZWxldGVBY2Nlc3MgKHJlcSwgcmVzLCBuZXh0KSB7IGNoZWNrQWRtaW5QZXJtaXNzaW9uKHJlcSwgcmVzLCBuZXh0LCAnZGVsZXRlRmFyZU1hbmFnZW1lbnQnKTsgfTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XHJcbiJdfQ==