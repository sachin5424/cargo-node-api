"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _express = require("express");

var _UserConteroller = _interopRequireDefault(require("./UserConteroller"));

var _user = require("../../../validation/user.validation");

var _jwtToken = require("../../../middleware/jwtToken");

var _validateAdmin = require("../../../middleware/validateAdmin");

var _UserValidations = require("../../../validation/UserValidations");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = (0, _express.Router)({
  mergeParams: true
});
router.post("/validate-token", _jwtToken.jwtTokenPermission, (req, res) => {
  res.send({
    type: global.cuser?.type
  });
});
router.post("/resgister", _user.userRegisterValidation, _UserConteroller.default.userRegister); // router.get("/list",  UserController.userList);

router.get("/profile/:id", _user.check_params, _UserConteroller.default.userProfile);
router.post("/login", _UserValidations.userLoginValidation, _UserConteroller.default.userLogin);
router.post('/refresh-token', _user.userRefreshTokenValidation, _UserConteroller.default.userRefreshToken);
router.post('/delete-refresh-token', _user.userRefreshTokenValidation, _UserConteroller.default.userTokenDelete);
router.get('/list', _jwtToken.jwtTokenPermission, checkUserViewAccess, _UserConteroller.default.list);
router.get('/list/:isAll', _jwtToken.jwtTokenPermission, checkUserViewAccess, _UserConteroller.default.list);
router.post("/save", _jwtToken.jwtTokenPermission, checkUserSaveAccess, _UserValidations.userValidation, _UserConteroller.default.save);
router.delete("/delete/:id", _jwtToken.jwtTokenPermission, CheckUserDeleteAccess, _UserConteroller.default.delete);

async function checkUserViewAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'viewUser');
}

;

async function checkUserSaveAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, req.body._id ? 'editUser' : 'addUser', true);
}

;

async function CheckUserDeleteAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'deleteUser');
}

;
var _default = router;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2FkbWluL3VzZXIvcm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwibWVyZ2VQYXJhbXMiLCJwb3N0Iiwiand0VG9rZW5QZXJtaXNzaW9uIiwicmVxIiwicmVzIiwic2VuZCIsInR5cGUiLCJnbG9iYWwiLCJjdXNlciIsInVzZXJSZWdpc3RlclZhbGlkYXRpb24iLCJVc2VyQ29udHJvbGxlciIsInVzZXJSZWdpc3RlciIsImdldCIsImNoZWNrX3BhcmFtcyIsInVzZXJQcm9maWxlIiwidXNlckxvZ2luVmFsaWRhdGlvbiIsInVzZXJMb2dpbiIsInVzZXJSZWZyZXNoVG9rZW5WYWxpZGF0aW9uIiwidXNlclJlZnJlc2hUb2tlbiIsInVzZXJUb2tlbkRlbGV0ZSIsImNoZWNrVXNlclZpZXdBY2Nlc3MiLCJsaXN0IiwiY2hlY2tVc2VyU2F2ZUFjY2VzcyIsInVzZXJWYWxpZGF0aW9uIiwic2F2ZSIsImRlbGV0ZSIsIkNoZWNrVXNlckRlbGV0ZUFjY2VzcyIsIm5leHQiLCJib2R5IiwiX2lkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxNQUFNLEdBQUcscUJBQU87QUFBRUMsRUFBQUEsV0FBVyxFQUFFO0FBQWYsQ0FBUCxDQUFmO0FBR0FELE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLGlCQUFaLEVBQStCQyw0QkFBL0IsRUFBbUQsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQVk7QUFBQ0EsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFBQ0MsSUFBQUEsSUFBSSxFQUFFQyxNQUFNLENBQUNDLEtBQVAsRUFBY0Y7QUFBckIsR0FBVDtBQUFxQyxDQUFyRztBQUNBUCxNQUFNLENBQUNFLElBQVAsQ0FBWSxZQUFaLEVBQTBCUSw0QkFBMUIsRUFBa0RDLHlCQUFlQyxZQUFqRSxFLENBQ0E7O0FBQ0FaLE1BQU0sQ0FBQ2EsR0FBUCxDQUFXLGNBQVgsRUFBMkJDLGtCQUEzQixFQUF5Q0gseUJBQWVJLFdBQXhEO0FBQ0FmLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLFFBQVosRUFBc0JjLG9DQUF0QixFQUEyQ0wseUJBQWVNLFNBQTFEO0FBQ0FqQixNQUFNLENBQUNFLElBQVAsQ0FBWSxnQkFBWixFQUE4QmdCLGdDQUE5QixFQUEwRFAseUJBQWVRLGdCQUF6RTtBQUNBbkIsTUFBTSxDQUFDRSxJQUFQLENBQVksdUJBQVosRUFBcUNnQixnQ0FBckMsRUFBaUVQLHlCQUFlUyxlQUFoRjtBQUVBcEIsTUFBTSxDQUFDYSxHQUFQLENBQVcsT0FBWCxFQUFvQlYsNEJBQXBCLEVBQXdDa0IsbUJBQXhDLEVBQTZEVix5QkFBZVcsSUFBNUU7QUFDQXRCLE1BQU0sQ0FBQ2EsR0FBUCxDQUFXLGNBQVgsRUFBMkJWLDRCQUEzQixFQUErQ2tCLG1CQUEvQyxFQUFvRVYseUJBQWVXLElBQW5GO0FBQ0F0QixNQUFNLENBQUNFLElBQVAsQ0FBWSxPQUFaLEVBQXFCQyw0QkFBckIsRUFBeUNvQixtQkFBekMsRUFBOERDLCtCQUE5RCxFQUE4RWIseUJBQWVjLElBQTdGO0FBQ0F6QixNQUFNLENBQUMwQixNQUFQLENBQWMsYUFBZCxFQUE2QnZCLDRCQUE3QixFQUFpRHdCLHFCQUFqRCxFQUF3RWhCLHlCQUFlZSxNQUF2Rjs7QUFFQSxlQUFlTCxtQkFBZixDQUFvQ2pCLEdBQXBDLEVBQXlDQyxHQUF6QyxFQUE4Q3VCLElBQTlDLEVBQW9EO0FBQUUsMkNBQXFCeEIsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCdUIsSUFBL0IsRUFBcUMsVUFBckM7QUFBbUQ7O0FBQUE7O0FBQ3pHLGVBQWVMLG1CQUFmLENBQW9DbkIsR0FBcEMsRUFBeUNDLEdBQXpDLEVBQThDdUIsSUFBOUMsRUFBb0Q7QUFBRSwyQ0FBcUJ4QixHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0J1QixJQUEvQixFQUFxQ3hCLEdBQUcsQ0FBQ3lCLElBQUosQ0FBU0MsR0FBVCxHQUFlLFVBQWYsR0FBNEIsU0FBakUsRUFBNEUsSUFBNUU7QUFBb0Y7O0FBQUE7O0FBQzFJLGVBQWVILHFCQUFmLENBQXNDdkIsR0FBdEMsRUFBMkNDLEdBQTNDLEVBQWdEdUIsSUFBaEQsRUFBc0Q7QUFBRSwyQ0FBcUJ4QixHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0J1QixJQUEvQixFQUFxQyxZQUFyQztBQUFxRDs7QUFBQTtlQUc5RjVCLE0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgVXNlckNvbnRyb2xsZXIgZnJvbSBcIi4vVXNlckNvbnRlcm9sbGVyXCI7XHJcbmltcG9ydCB7IHVzZXJSZWdpc3RlclZhbGlkYXRpb24sIHVzZXJSZWZyZXNoVG9rZW5WYWxpZGF0aW9uLCBjaGVja19wYXJhbXMgfSBmcm9tIFwiLi4vLi4vLi4vdmFsaWRhdGlvbi91c2VyLnZhbGlkYXRpb25cIjtcclxuaW1wb3J0IHsgand0VG9rZW5QZXJtaXNzaW9uIH0gZnJvbSBcIi4uLy4uLy4uL21pZGRsZXdhcmUvand0VG9rZW5cIjtcclxuaW1wb3J0IHsgY2hlY2tBZG1pblBlcm1pc3Npb259IGZyb20gXCIuLi8uLi8uLi9taWRkbGV3YXJlL3ZhbGlkYXRlQWRtaW5cIjtcclxuaW1wb3J0IHsgdXNlclZhbGlkYXRpb24sIHVzZXJMb2dpblZhbGlkYXRpb24gfSBmcm9tIFwiLi4vLi4vLi4vdmFsaWRhdGlvbi9Vc2VyVmFsaWRhdGlvbnNcIjtcclxuXHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcih7IG1lcmdlUGFyYW1zOiB0cnVlIH0pO1xyXG5cclxuXHJcbnJvdXRlci5wb3N0KFwiL3ZhbGlkYXRlLXRva2VuXCIsIGp3dFRva2VuUGVybWlzc2lvbiwgKHJlcSwgcmVzKT0+e3Jlcy5zZW5kKHt0eXBlOiBnbG9iYWwuY3VzZXI/LnR5cGV9KX0pO1xyXG5yb3V0ZXIucG9zdChcIi9yZXNnaXN0ZXJcIiwgdXNlclJlZ2lzdGVyVmFsaWRhdGlvbiwgVXNlckNvbnRyb2xsZXIudXNlclJlZ2lzdGVyKTtcclxuLy8gcm91dGVyLmdldChcIi9saXN0XCIsICBVc2VyQ29udHJvbGxlci51c2VyTGlzdCk7XHJcbnJvdXRlci5nZXQoXCIvcHJvZmlsZS86aWRcIiwgY2hlY2tfcGFyYW1zLCBVc2VyQ29udHJvbGxlci51c2VyUHJvZmlsZSk7XHJcbnJvdXRlci5wb3N0KFwiL2xvZ2luXCIsIHVzZXJMb2dpblZhbGlkYXRpb24sIFVzZXJDb250cm9sbGVyLnVzZXJMb2dpbik7XHJcbnJvdXRlci5wb3N0KCcvcmVmcmVzaC10b2tlbicsIHVzZXJSZWZyZXNoVG9rZW5WYWxpZGF0aW9uLCBVc2VyQ29udHJvbGxlci51c2VyUmVmcmVzaFRva2VuKTtcclxucm91dGVyLnBvc3QoJy9kZWxldGUtcmVmcmVzaC10b2tlbicsIHVzZXJSZWZyZXNoVG9rZW5WYWxpZGF0aW9uLCBVc2VyQ29udHJvbGxlci51c2VyVG9rZW5EZWxldGUpO1xyXG5cclxucm91dGVyLmdldCgnL2xpc3QnLCBqd3RUb2tlblBlcm1pc3Npb24sIGNoZWNrVXNlclZpZXdBY2Nlc3MsIFVzZXJDb250cm9sbGVyLmxpc3QpO1xyXG5yb3V0ZXIuZ2V0KCcvbGlzdC86aXNBbGwnLCBqd3RUb2tlblBlcm1pc3Npb24sIGNoZWNrVXNlclZpZXdBY2Nlc3MsIFVzZXJDb250cm9sbGVyLmxpc3QpO1xyXG5yb3V0ZXIucG9zdChcIi9zYXZlXCIsIGp3dFRva2VuUGVybWlzc2lvbiwgY2hlY2tVc2VyU2F2ZUFjY2VzcywgdXNlclZhbGlkYXRpb24sIFVzZXJDb250cm9sbGVyLnNhdmUgKTtcclxucm91dGVyLmRlbGV0ZShcIi9kZWxldGUvOmlkXCIsIGp3dFRva2VuUGVybWlzc2lvbiwgQ2hlY2tVc2VyRGVsZXRlQWNjZXNzLCBVc2VyQ29udHJvbGxlci5kZWxldGUpO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gY2hlY2tVc2VyVmlld0FjY2VzcyAocmVxLCByZXMsIG5leHQpIHsgY2hlY2tBZG1pblBlcm1pc3Npb24ocmVxLCByZXMsIG5leHQsICd2aWV3VXNlcicpOyB9O1xyXG5hc3luYyBmdW5jdGlvbiBjaGVja1VzZXJTYXZlQWNjZXNzIChyZXEsIHJlcywgbmV4dCkgeyBjaGVja0FkbWluUGVybWlzc2lvbihyZXEsIHJlcywgbmV4dCwgcmVxLmJvZHkuX2lkID8gJ2VkaXRVc2VyJyA6ICdhZGRVc2VyJywgdHJ1ZSk7IH07XHJcbmFzeW5jIGZ1bmN0aW9uIENoZWNrVXNlckRlbGV0ZUFjY2VzcyAocmVxLCByZXMsIG5leHQpIHsgY2hlY2tBZG1pblBlcm1pc3Npb24ocmVxLCByZXMsIG5leHQsICdkZWxldGVVc2VyJyk7IH07XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG4iXX0=