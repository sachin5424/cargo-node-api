"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _express = require("express");

var _TypeConteroller = _interopRequireDefault(require("./TypeConteroller"));

var _validateAdmin = require("../../../middleware/validateAdmin");

var _RideValidations = require("../../../validation/RideValidations");

var _others = require("../../../middleware/others");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = (0, _express.Router)({
  mergeParams: true
});
router.get('/type/list', checkRideTypeListAccess, _TypeConteroller.default.list);
router.get('/type/list/:isAll', checkRideTypeListAccess, _TypeConteroller.default.list);
router.post('/type/save', checkRideTypeSaveAccess, _RideValidations.rideTypeValidation, _others.formValidation, _TypeConteroller.default.save);
router.delete("/type/delete/:id", CheckRideTypeDeleteAccess, _TypeConteroller.default.delete);

async function checkRideTypeListAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'viewRideType');
}

;

async function checkRideTypeSaveAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, req.body._id ? 'editRideType' : 'addRideType', true);
}

;

async function CheckRideTypeDeleteAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'deleteRideType');
}

;
var _default = router;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2FkbWluL3JpZGUvcm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwibWVyZ2VQYXJhbXMiLCJnZXQiLCJjaGVja1JpZGVUeXBlTGlzdEFjY2VzcyIsIlR5cGVDb250ZXJvbGxlciIsImxpc3QiLCJwb3N0IiwiY2hlY2tSaWRlVHlwZVNhdmVBY2Nlc3MiLCJyaWRlVHlwZVZhbGlkYXRpb24iLCJmb3JtVmFsaWRhdGlvbiIsInNhdmUiLCJkZWxldGUiLCJDaGVja1JpZGVUeXBlRGVsZXRlQWNjZXNzIiwicmVxIiwicmVzIiwibmV4dCIsImJvZHkiLCJfaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLE1BQU0sR0FBRyxxQkFBTztBQUFFQyxFQUFBQSxXQUFXLEVBQUU7QUFBZixDQUFQLENBQWY7QUFFQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsWUFBWCxFQUF5QkMsdUJBQXpCLEVBQWtEQyx5QkFBZ0JDLElBQWxFO0FBQ0FMLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLG1CQUFYLEVBQWdDQyx1QkFBaEMsRUFBeURDLHlCQUFnQkMsSUFBekU7QUFDQUwsTUFBTSxDQUFDTSxJQUFQLENBQVksWUFBWixFQUEyQkMsdUJBQTNCLEVBQW9EQyxtQ0FBcEQsRUFBd0VDLHNCQUF4RSxFQUF3RkwseUJBQWdCTSxJQUF4RztBQUNBVixNQUFNLENBQUNXLE1BQVAsQ0FBYyxrQkFBZCxFQUFrQ0MseUJBQWxDLEVBQThEUix5QkFBZ0JPLE1BQTlFOztBQUVBLGVBQWVSLHVCQUFmLENBQXdDVSxHQUF4QyxFQUE2Q0MsR0FBN0MsRUFBa0RDLElBQWxELEVBQXdEO0FBQUUsMkNBQXFCRixHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLElBQS9CLEVBQXFDLGNBQXJDO0FBQXVEOztBQUFBOztBQUNqSCxlQUFlUix1QkFBZixDQUF3Q00sR0FBeEMsRUFBNkNDLEdBQTdDLEVBQWtEQyxJQUFsRCxFQUF3RDtBQUFFLDJDQUFxQkYsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQ0YsR0FBRyxDQUFDRyxJQUFKLENBQVNDLEdBQVQsR0FBZSxjQUFmLEdBQWdDLGFBQXJFLEVBQW9GLElBQXBGO0FBQTRGOztBQUFBOztBQUN0SixlQUFlTCx5QkFBZixDQUEwQ0MsR0FBMUMsRUFBK0NDLEdBQS9DLEVBQW9EQyxJQUFwRCxFQUEwRDtBQUFFLDJDQUFxQkYsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQyxnQkFBckM7QUFBeUQ7O0FBQUE7ZUFHdEdmLE0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgVHlwZUNvbnRlcm9sbGVyIGZyb20gXCIuL1R5cGVDb250ZXJvbGxlclwiO1xyXG5pbXBvcnQgeyBjaGVja0FkbWluUGVybWlzc2lvbiB9IGZyb20gXCIuLi8uLi8uLi9taWRkbGV3YXJlL3ZhbGlkYXRlQWRtaW5cIjtcclxuaW1wb3J0IHsgcmlkZVR5cGVWYWxpZGF0aW9uIH0gZnJvbSBcIi4uLy4uLy4uL3ZhbGlkYXRpb24vUmlkZVZhbGlkYXRpb25zXCI7XHJcbmltcG9ydCB7IGZvcm1WYWxpZGF0aW9uIH0gZnJvbSBcIi4uLy4uLy4uL21pZGRsZXdhcmUvb3RoZXJzXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoeyBtZXJnZVBhcmFtczogdHJ1ZSB9KTtcclxuXHJcbnJvdXRlci5nZXQoJy90eXBlL2xpc3QnLCBjaGVja1JpZGVUeXBlTGlzdEFjY2VzcywgVHlwZUNvbnRlcm9sbGVyLmxpc3QpO1xyXG5yb3V0ZXIuZ2V0KCcvdHlwZS9saXN0Lzppc0FsbCcsIGNoZWNrUmlkZVR5cGVMaXN0QWNjZXNzLCBUeXBlQ29udGVyb2xsZXIubGlzdCk7XHJcbnJvdXRlci5wb3N0KCcvdHlwZS9zYXZlJywgIGNoZWNrUmlkZVR5cGVTYXZlQWNjZXNzLCByaWRlVHlwZVZhbGlkYXRpb24sIGZvcm1WYWxpZGF0aW9uLCBUeXBlQ29udGVyb2xsZXIuc2F2ZSk7XHJcbnJvdXRlci5kZWxldGUoXCIvdHlwZS9kZWxldGUvOmlkXCIsIENoZWNrUmlkZVR5cGVEZWxldGVBY2Nlc3MsICBUeXBlQ29udGVyb2xsZXIuZGVsZXRlKTtcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGNoZWNrUmlkZVR5cGVMaXN0QWNjZXNzIChyZXEsIHJlcywgbmV4dCkgeyBjaGVja0FkbWluUGVybWlzc2lvbihyZXEsIHJlcywgbmV4dCwgJ3ZpZXdSaWRlVHlwZScpOyB9O1xyXG5hc3luYyBmdW5jdGlvbiBjaGVja1JpZGVUeXBlU2F2ZUFjY2VzcyAocmVxLCByZXMsIG5leHQpIHsgY2hlY2tBZG1pblBlcm1pc3Npb24ocmVxLCByZXMsIG5leHQsIHJlcS5ib2R5Ll9pZCA/ICdlZGl0UmlkZVR5cGUnIDogJ2FkZFJpZGVUeXBlJywgdHJ1ZSk7IH07XHJcbmFzeW5jIGZ1bmN0aW9uIENoZWNrUmlkZVR5cGVEZWxldGVBY2Nlc3MgKHJlcSwgcmVzLCBuZXh0KSB7IGNoZWNrQWRtaW5QZXJtaXNzaW9uKHJlcSwgcmVzLCBuZXh0LCAnZGVsZXRlUmlkZVR5cGUnKTsgfTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XHJcbiJdfQ==