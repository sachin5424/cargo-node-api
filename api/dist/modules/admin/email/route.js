"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _express = require("express");

var _TemplateController = _interopRequireDefault(require("./TemplateController"));

var _EmailController = _interopRequireDefault(require("./EmailController"));

var _validateAdmin = require("../../../middleware/validateAdmin");

var _others = require("../../../middleware/others");

var _EmailValidations = require("../../../validation/EmailValidations");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = (0, _express.Router)({
  mergeParams: true
});
router.get('/template/list', checkEmailTemplateListAccess, _TemplateController.default.list);
router.get('/template/list/:isAll', checkEmailTemplateListAccess, _TemplateController.default.list);
router.post('/template/save', checkEmailTemplateSaveAccess, _EmailValidations.templateValidation, _others.formValidation, _TemplateController.default.save);
router.delete("/template/delete/:id", CheckEmailTemplateDeleteAccess, _TemplateController.default.delete);
router.get('/list', checkSentEmailListAccess, _EmailController.default.list);
router.get('/list/:isAll', checkSentEmailListAccess, _EmailController.default.list);
router.post('/save', checkSendEmailAccess, _EmailValidations.sendEmailValidation, _others.formValidation, _EmailController.default.save); // router.delete("/delete/:id", EmailController.delete);

async function checkEmailTemplateListAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'viewEmailTemplate');
}

;

async function checkEmailTemplateSaveAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, req.body._id ? 'editEmailTemplate' : 'addEmailTemplate');
}

;

async function CheckEmailTemplateDeleteAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'deleteEmailTemplate');
}

;

async function checkSentEmailListAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'viewSentEmail');
}

;

async function checkSendEmailAccess(req, res, next) {
  (0, _validateAdmin.checkAdminPermission)(req, res, next, 'sendEmail');
}

;
var _default = router;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2FkbWluL2VtYWlsL3JvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIm1lcmdlUGFyYW1zIiwiZ2V0IiwiY2hlY2tFbWFpbFRlbXBsYXRlTGlzdEFjY2VzcyIsIlRlbXBsYXRlQ29udHJvbGxlciIsImxpc3QiLCJwb3N0IiwiY2hlY2tFbWFpbFRlbXBsYXRlU2F2ZUFjY2VzcyIsInRlbXBsYXRlVmFsaWRhdGlvbiIsImZvcm1WYWxpZGF0aW9uIiwic2F2ZSIsImRlbGV0ZSIsIkNoZWNrRW1haWxUZW1wbGF0ZURlbGV0ZUFjY2VzcyIsImNoZWNrU2VudEVtYWlsTGlzdEFjY2VzcyIsIkVtYWlsQ29udHJvbGxlciIsImNoZWNrU2VuZEVtYWlsQWNjZXNzIiwic2VuZEVtYWlsVmFsaWRhdGlvbiIsInJlcSIsInJlcyIsIm5leHQiLCJib2R5IiwiX2lkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxNQUFNLEdBQUcscUJBQU87QUFBRUMsRUFBQUEsV0FBVyxFQUFFO0FBQWYsQ0FBUCxDQUFmO0FBRUFELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLGdCQUFYLEVBQTZCQyw0QkFBN0IsRUFBMkRDLDRCQUFtQkMsSUFBOUU7QUFDQUwsTUFBTSxDQUFDRSxHQUFQLENBQVcsdUJBQVgsRUFBb0NDLDRCQUFwQyxFQUFrRUMsNEJBQW1CQyxJQUFyRjtBQUNBTCxNQUFNLENBQUNNLElBQVAsQ0FBWSxnQkFBWixFQUE4QkMsNEJBQTlCLEVBQTREQyxvQ0FBNUQsRUFBZ0ZDLHNCQUFoRixFQUFnR0wsNEJBQW1CTSxJQUFuSDtBQUNBVixNQUFNLENBQUNXLE1BQVAsQ0FBYyxzQkFBZCxFQUFzQ0MsOEJBQXRDLEVBQXNFUiw0QkFBbUJPLE1BQXpGO0FBRUFYLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLE9BQVgsRUFBb0JXLHdCQUFwQixFQUE4Q0MseUJBQWdCVCxJQUE5RDtBQUNBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxjQUFYLEVBQTJCVyx3QkFBM0IsRUFBcURDLHlCQUFnQlQsSUFBckU7QUFDQUwsTUFBTSxDQUFDTSxJQUFQLENBQVksT0FBWixFQUFxQlMsb0JBQXJCLEVBQTJDQyxxQ0FBM0MsRUFBZ0VQLHNCQUFoRSxFQUFnRksseUJBQWdCSixJQUFoRyxFLENBQ0E7O0FBR0EsZUFBZVAsNEJBQWYsQ0FBNkNjLEdBQTdDLEVBQWtEQyxHQUFsRCxFQUF1REMsSUFBdkQsRUFBNkQ7QUFBRSwyQ0FBcUJGLEdBQXJCLEVBQTBCQyxHQUExQixFQUErQkMsSUFBL0IsRUFBcUMsbUJBQXJDO0FBQTREOztBQUFBOztBQUMzSCxlQUFlWiw0QkFBZixDQUE2Q1UsR0FBN0MsRUFBa0RDLEdBQWxELEVBQXVEQyxJQUF2RCxFQUE2RDtBQUFFLDJDQUFxQkYsR0FBckIsRUFBMEJDLEdBQTFCLEVBQStCQyxJQUEvQixFQUFxQ0YsR0FBRyxDQUFDRyxJQUFKLENBQVNDLEdBQVQsR0FBZSxtQkFBZixHQUFxQyxrQkFBMUU7QUFBZ0c7O0FBQUE7O0FBQy9KLGVBQWVULDhCQUFmLENBQStDSyxHQUEvQyxFQUFvREMsR0FBcEQsRUFBeURDLElBQXpELEVBQStEO0FBQUUsMkNBQXFCRixHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLElBQS9CLEVBQXFDLHFCQUFyQztBQUE4RDs7QUFBQTs7QUFFL0gsZUFBZU4sd0JBQWYsQ0FBeUNJLEdBQXpDLEVBQThDQyxHQUE5QyxFQUFtREMsSUFBbkQsRUFBeUQ7QUFBRSwyQ0FBcUJGLEdBQXJCLEVBQTBCQyxHQUExQixFQUErQkMsSUFBL0IsRUFBcUMsZUFBckM7QUFBd0Q7O0FBQUE7O0FBQ25ILGVBQWVKLG9CQUFmLENBQXFDRSxHQUFyQyxFQUEwQ0MsR0FBMUMsRUFBK0NDLElBQS9DLEVBQXFEO0FBQUUsMkNBQXFCRixHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLElBQS9CLEVBQXFDLFdBQXJDO0FBQW9EOztBQUFBO2VBRTVGbkIsTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBUZW1wbGF0ZUNvbnRyb2xsZXIgZnJvbSBcIi4vVGVtcGxhdGVDb250cm9sbGVyXCI7XHJcbmltcG9ydCBFbWFpbENvbnRyb2xsZXIgZnJvbSBcIi4vRW1haWxDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7IGNoZWNrQWRtaW5QZXJtaXNzaW9uIH0gZnJvbSBcIi4uLy4uLy4uL21pZGRsZXdhcmUvdmFsaWRhdGVBZG1pblwiO1xyXG5pbXBvcnQgeyBmb3JtVmFsaWRhdGlvbiB9IGZyb20gXCIuLi8uLi8uLi9taWRkbGV3YXJlL290aGVyc1wiO1xyXG5pbXBvcnQgeyB0ZW1wbGF0ZVZhbGlkYXRpb24sIHNlbmRFbWFpbFZhbGlkYXRpb24gfSBmcm9tIFwiLi4vLi4vLi4vdmFsaWRhdGlvbi9FbWFpbFZhbGlkYXRpb25zXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoeyBtZXJnZVBhcmFtczogdHJ1ZSB9KTtcclxuXHJcbnJvdXRlci5nZXQoJy90ZW1wbGF0ZS9saXN0JywgY2hlY2tFbWFpbFRlbXBsYXRlTGlzdEFjY2VzcywgVGVtcGxhdGVDb250cm9sbGVyLmxpc3QpO1xyXG5yb3V0ZXIuZ2V0KCcvdGVtcGxhdGUvbGlzdC86aXNBbGwnLCBjaGVja0VtYWlsVGVtcGxhdGVMaXN0QWNjZXNzLCBUZW1wbGF0ZUNvbnRyb2xsZXIubGlzdCk7XHJcbnJvdXRlci5wb3N0KCcvdGVtcGxhdGUvc2F2ZScsIGNoZWNrRW1haWxUZW1wbGF0ZVNhdmVBY2Nlc3MsIHRlbXBsYXRlVmFsaWRhdGlvbiwgZm9ybVZhbGlkYXRpb24sIFRlbXBsYXRlQ29udHJvbGxlci5zYXZlKTtcclxucm91dGVyLmRlbGV0ZShcIi90ZW1wbGF0ZS9kZWxldGUvOmlkXCIsIENoZWNrRW1haWxUZW1wbGF0ZURlbGV0ZUFjY2VzcywgVGVtcGxhdGVDb250cm9sbGVyLmRlbGV0ZSk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvbGlzdCcsIGNoZWNrU2VudEVtYWlsTGlzdEFjY2VzcywgRW1haWxDb250cm9sbGVyLmxpc3QpO1xyXG5yb3V0ZXIuZ2V0KCcvbGlzdC86aXNBbGwnLCBjaGVja1NlbnRFbWFpbExpc3RBY2Nlc3MsIEVtYWlsQ29udHJvbGxlci5saXN0KTtcclxucm91dGVyLnBvc3QoJy9zYXZlJywgY2hlY2tTZW5kRW1haWxBY2Nlc3MsIHNlbmRFbWFpbFZhbGlkYXRpb24sIGZvcm1WYWxpZGF0aW9uLCBFbWFpbENvbnRyb2xsZXIuc2F2ZSk7XHJcbi8vIHJvdXRlci5kZWxldGUoXCIvZGVsZXRlLzppZFwiLCBFbWFpbENvbnRyb2xsZXIuZGVsZXRlKTtcclxuXHJcblxyXG5hc3luYyBmdW5jdGlvbiBjaGVja0VtYWlsVGVtcGxhdGVMaXN0QWNjZXNzIChyZXEsIHJlcywgbmV4dCkgeyBjaGVja0FkbWluUGVybWlzc2lvbihyZXEsIHJlcywgbmV4dCwgJ3ZpZXdFbWFpbFRlbXBsYXRlJyk7IH07XHJcbmFzeW5jIGZ1bmN0aW9uIGNoZWNrRW1haWxUZW1wbGF0ZVNhdmVBY2Nlc3MgKHJlcSwgcmVzLCBuZXh0KSB7IGNoZWNrQWRtaW5QZXJtaXNzaW9uKHJlcSwgcmVzLCBuZXh0LCByZXEuYm9keS5faWQgPyAnZWRpdEVtYWlsVGVtcGxhdGUnIDogJ2FkZEVtYWlsVGVtcGxhdGUnKTsgfTtcclxuYXN5bmMgZnVuY3Rpb24gQ2hlY2tFbWFpbFRlbXBsYXRlRGVsZXRlQWNjZXNzIChyZXEsIHJlcywgbmV4dCkgeyBjaGVja0FkbWluUGVybWlzc2lvbihyZXEsIHJlcywgbmV4dCwgJ2RlbGV0ZUVtYWlsVGVtcGxhdGUnKTsgfTtcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGNoZWNrU2VudEVtYWlsTGlzdEFjY2VzcyAocmVxLCByZXMsIG5leHQpIHsgY2hlY2tBZG1pblBlcm1pc3Npb24ocmVxLCByZXMsIG5leHQsICd2aWV3U2VudEVtYWlsJyk7IH07XHJcbmFzeW5jIGZ1bmN0aW9uIGNoZWNrU2VuZEVtYWlsQWNjZXNzIChyZXEsIHJlcywgbmV4dCkgeyBjaGVja0FkbWluUGVybWlzc2lvbihyZXEsIHJlcywgbmV4dCwgJ3NlbmRFbWFpbCcpOyB9O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyJdfQ==