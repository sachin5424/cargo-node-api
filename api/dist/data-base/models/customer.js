"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mongoose = require("mongoose");

var _bcryptjs = _interopRequireDefault(require("bcryptjs"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const CustomerSchema = new _mongoose.Schema({
  firstName: String,
  lastName: String,
  phoneNo: String,
  email: String,
  emailVerified: {
    type: Boolean,
    default: false
  },
  password: String,
  dob: Date,
  photo: String,
  address: String,
  state: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: "state"
  },
  district: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: "district"
  },
  taluk: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: "taluk"
  },
  zipcode: String,
  gender: String,
  isDeleted: {
    type: Boolean,
    default: false
  },
  isActive: {
    type: Boolean,
    default: false
  },
  emailOtp: {
    type: Number
  }
}, {
  timestamps: true
}); // CustomerSchema.pre('save', function (next) { return next(); });

CustomerSchema.pre('save', async function (next) {
  try {
    if (this.password) {
      const salt = await _bcryptjs.default.genSalt(10);
      this.password = await _bcryptjs.default.hash(this.password, salt);
    }
  } catch (err) {
    next(err);
  }

  next();
});
const CustomerModel = (0, _mongoose.model)('customer', CustomerSchema);
var _default = CustomerModel;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kYXRhLWJhc2UvbW9kZWxzL2N1c3RvbWVyLmpzIl0sIm5hbWVzIjpbIkN1c3RvbWVyU2NoZW1hIiwiU2NoZW1hIiwiZmlyc3ROYW1lIiwiU3RyaW5nIiwibGFzdE5hbWUiLCJwaG9uZU5vIiwiZW1haWwiLCJlbWFpbFZlcmlmaWVkIiwidHlwZSIsIkJvb2xlYW4iLCJkZWZhdWx0IiwicGFzc3dvcmQiLCJkb2IiLCJEYXRlIiwicGhvdG8iLCJhZGRyZXNzIiwic3RhdGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiZGlzdHJpY3QiLCJ0YWx1ayIsInppcGNvZGUiLCJnZW5kZXIiLCJpc0RlbGV0ZWQiLCJpc0FjdGl2ZSIsImVtYWlsT3RwIiwiTnVtYmVyIiwidGltZXN0YW1wcyIsInByZSIsIm5leHQiLCJzYWx0IiwiYmNyeXB0IiwiZ2VuU2FsdCIsImhhc2giLCJlcnIiLCJDdXN0b21lck1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxjQUFjLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUM5QkMsRUFBQUEsU0FBUyxFQUFFQyxNQURtQjtBQUU5QkMsRUFBQUEsUUFBUSxFQUFFRCxNQUZvQjtBQUc5QkUsRUFBQUEsT0FBTyxFQUFFRixNQUhxQjtBQUk5QkcsRUFBQUEsS0FBSyxFQUFFSCxNQUp1QjtBQUs5QkksRUFBQUEsYUFBYSxFQUFFO0FBQ1hDLElBQUFBLElBQUksRUFBRUMsT0FESztBQUVYQyxJQUFBQSxPQUFPLEVBQUU7QUFGRSxHQUxlO0FBUzlCQyxFQUFBQSxRQUFRLEVBQUVSLE1BVG9CO0FBVTlCUyxFQUFBQSxHQUFHLEVBQUVDLElBVnlCO0FBVzlCQyxFQUFBQSxLQUFLLEVBQUVYLE1BWHVCO0FBWTlCWSxFQUFBQSxPQUFPLEVBQUVaLE1BWnFCO0FBYTlCYSxFQUFBQSxLQUFLLEVBQUU7QUFDSFIsSUFBQUEsSUFBSSxFQUFFUCxpQkFBT2dCLEtBQVAsQ0FBYUMsUUFEaEI7QUFFSEMsSUFBQUEsR0FBRyxFQUFFO0FBRkYsR0FidUI7QUFpQjlCQyxFQUFBQSxRQUFRLEVBQUU7QUFDTlosSUFBQUEsSUFBSSxFQUFFUCxpQkFBT2dCLEtBQVAsQ0FBYUMsUUFEYjtBQUVOQyxJQUFBQSxHQUFHLEVBQUU7QUFGQyxHQWpCb0I7QUFxQjlCRSxFQUFBQSxLQUFLLEVBQUU7QUFDSGIsSUFBQUEsSUFBSSxFQUFFUCxpQkFBT2dCLEtBQVAsQ0FBYUMsUUFEaEI7QUFFSEMsSUFBQUEsR0FBRyxFQUFFO0FBRkYsR0FyQnVCO0FBeUI5QkcsRUFBQUEsT0FBTyxFQUFFbkIsTUF6QnFCO0FBMEI5Qm9CLEVBQUFBLE1BQU0sRUFBQ3BCLE1BMUJ1QjtBQTJCOUJxQixFQUFBQSxTQUFTLEVBQUU7QUFDUGhCLElBQUFBLElBQUksRUFBRUMsT0FEQztBQUVQQyxJQUFBQSxPQUFPLEVBQUU7QUFGRixHQTNCbUI7QUErQjlCZSxFQUFBQSxRQUFRLEVBQUU7QUFDTmpCLElBQUFBLElBQUksRUFBRUMsT0FEQTtBQUVOQyxJQUFBQSxPQUFPLEVBQUU7QUFGSCxHQS9Cb0I7QUFtQzlCZ0IsRUFBQUEsUUFBUSxFQUFDO0FBQ0xsQixJQUFBQSxJQUFJLEVBQUVtQjtBQUREO0FBbkNxQixDQUFYLEVBdUNwQjtBQUFFQyxFQUFBQSxVQUFVLEVBQUU7QUFBZCxDQXZDb0IsQ0FBdkIsQyxDQTBDQTs7QUFHQTVCLGNBQWMsQ0FBQzZCLEdBQWYsQ0FBbUIsTUFBbkIsRUFBMkIsZ0JBQWdCQyxJQUFoQixFQUFzQjtBQUM3QyxNQUFHO0FBQ0MsUUFBSSxLQUFLbkIsUUFBVCxFQUFtQjtBQUNmLFlBQU1vQixJQUFJLEdBQUcsTUFBTUMsa0JBQU9DLE9BQVAsQ0FBZSxFQUFmLENBQW5CO0FBQ0EsV0FBS3RCLFFBQUwsR0FBZ0IsTUFBTXFCLGtCQUFPRSxJQUFQLENBQVksS0FBS3ZCLFFBQWpCLEVBQTJCb0IsSUFBM0IsQ0FBdEI7QUFDSDtBQUNKLEdBTEQsQ0FLRSxPQUFNSSxHQUFOLEVBQVU7QUFDUkwsSUFBQUEsSUFBSSxDQUFDSyxHQUFELENBQUo7QUFDSDs7QUFDREwsRUFBQUEsSUFBSTtBQUNQLENBVkQ7QUFZQSxNQUFNTSxhQUFhLEdBQUcscUJBQU0sVUFBTixFQUFrQnBDLGNBQWxCLENBQXRCO2VBRWVvQyxhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hLCBtb2RlbCB9IGZyb20gJ21vbmdvb3NlJztcclxuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIjtcclxuXHJcbmNvbnN0IEN1c3RvbWVyU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgICBmaXJzdE5hbWU6IFN0cmluZyxcclxuICAgIGxhc3ROYW1lOiBTdHJpbmcsXHJcbiAgICBwaG9uZU5vOiBTdHJpbmcsXHJcbiAgICBlbWFpbDogU3RyaW5nLFxyXG4gICAgZW1haWxWZXJpZmllZDogeyBcclxuICAgICAgICB0eXBlOiBCb29sZWFuLCBcclxuICAgICAgICBkZWZhdWx0OiBmYWxzZSBcclxuICAgIH0sXHJcbiAgICBwYXNzd29yZDogU3RyaW5nLFxyXG4gICAgZG9iOiBEYXRlLFxyXG4gICAgcGhvdG86IFN0cmluZyxcclxuICAgIGFkZHJlc3M6IFN0cmluZyxcclxuICAgIHN0YXRlOiB7XHJcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgIHJlZjogXCJzdGF0ZVwiLFxyXG4gICAgfSxcclxuICAgIGRpc3RyaWN0OiB7XHJcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgIHJlZjogXCJkaXN0cmljdFwiLFxyXG4gICAgfSxcclxuICAgIHRhbHVrOiB7XHJcbiAgICAgICAgdHlwZTogU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgICAgIHJlZjogXCJ0YWx1a1wiLFxyXG4gICAgfSxcclxuICAgIHppcGNvZGU6IFN0cmluZyxcclxuICAgIGdlbmRlcjpTdHJpbmcsXHJcbiAgICBpc0RlbGV0ZWQ6IHtcclxuICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgaXNBY3RpdmU6IHtcclxuICAgICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXHJcbiAgICB9LFxyXG4gICAgZW1haWxPdHA6e1xyXG4gICAgICAgIHR5cGU6IE51bWJlcixcclxuICAgICAgICBcclxuICAgIH1cclxufSwgeyB0aW1lc3RhbXBzOiB0cnVlIH0pO1xyXG5cclxuXHJcbi8vIEN1c3RvbWVyU2NoZW1hLnByZSgnc2F2ZScsIGZ1bmN0aW9uIChuZXh0KSB7IHJldHVybiBuZXh0KCk7IH0pO1xyXG5cclxuXHJcbkN1c3RvbWVyU2NoZW1hLnByZSgnc2F2ZScsIGFzeW5jIGZ1bmN0aW9uIChuZXh0KSB7XHJcbiAgICB0cnl7XHJcbiAgICAgICAgaWYgKHRoaXMucGFzc3dvcmQpIHtcclxuICAgICAgICAgICAgY29uc3Qgc2FsdCA9IGF3YWl0IGJjcnlwdC5nZW5TYWx0KDEwKTtcclxuICAgICAgICAgICAgdGhpcy5wYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHRoaXMucGFzc3dvcmQsIHNhbHQpO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2goZXJyKXtcclxuICAgICAgICBuZXh0KGVycik7XHJcbiAgICB9XHJcbiAgICBuZXh0KCk7XHJcbn0pO1xyXG5cclxuY29uc3QgQ3VzdG9tZXJNb2RlbCA9IG1vZGVsKCdjdXN0b21lcicsIEN1c3RvbWVyU2NoZW1hKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEN1c3RvbWVyTW9kZWw7Il19